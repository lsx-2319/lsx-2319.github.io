<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Tls on star‘s Blog</title>
        <link>https://example.com/tags/tls/</link>
        <description>Recent content in Tls on star‘s Blog</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-cn</language>
        <copyright>Example Person</copyright>
        <lastBuildDate>Sun, 13 Jul 2025 14:27:57 +0800</lastBuildDate><atom:link href="https://example.com/tags/tls/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>Https的原理</title>
        <link>https://example.com/p/https%E7%9A%84%E5%8E%9F%E7%90%86/</link>
        <pubDate>Sun, 13 Jul 2025 14:27:57 +0800</pubDate>
        
        <guid>https://example.com/p/https%E7%9A%84%E5%8E%9F%E7%90%86/</guid>
        <description>&lt;p&gt;1.客户端请求 HTTPS 网址，然后连接到 server 的 443 端口 (HTTPS 默认端口，类似于 HTTP 的80端口)。&lt;/p&gt;
&lt;p&gt;2.采用 HTTPS 协议的服务器必须要有一套数字 CA (Certification Authority)证书，证书是需要申请的，并由专门的数字证书认证机构(CA)通过非常严格的审核之后颁发的电子证书 (当然了是要钱的，安全级别越高价格越贵)。颁发证书的同时会产生一个私钥和公钥。私钥由服务端自己保存，不可泄漏。公钥则是附带在证书的信息中，可以公开的。证书本身也附带一个证书电子签名，这个签名用来验证证书的完整性和真实性，可以防止证书被篡改。&lt;/p&gt;
&lt;p&gt;3.服务器响应客户端请求，将证书传递给客户端，证书包含公钥和大量其他信息，比如证书颁发机构信息，公司信息和证书有效期等。Chrome 浏览器点击地址栏的锁标志再点击证书就可以看到证书详细信息。&lt;br&gt;
4.客户端解析证书并对其进行验证。如果证书不是可信机构颁布，或者证书中的域名与实际域名不一致，或者证书已经过期，就会向访问者显示一个警告，由其选择是否还要继续通信。就像下面这样：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://example.com/img/similianjie.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;
如果证书没有问题，客户端就会从服务器证书中取出服务器的公钥A。然后客户端还会生成一个随机码 KEY，并使用公钥A将其加密。&lt;/p&gt;
&lt;p&gt;5.客户端把加密后的随机码 KEY 发送给服务器，作为后面对称加密的密钥。&lt;/p&gt;
&lt;p&gt;6.服务器在收到随机码 KEY 之后会使用私钥B将其解密。经过以上这些步骤，客户端和服务器终于建立了安全连接，完美解决了对称加密的密钥泄露问题，接下来就可以用对称加密愉快地进行通信了。&lt;/p&gt;
&lt;p&gt;7.服务器使用密钥 (随机码 KEY)对数据进行对称加密并发送给客户端，客户端使用相同的密钥 (随机码 KEY)解密数据。&lt;/p&gt;
&lt;p&gt;8.双方使用对称加密愉快地传输所有数据。
&lt;img src=&#34;https://example.com/img/%e7%a4%ba%e6%84%8f%e5%9b%be.png&#34;
	
	
	
	loading=&#34;lazy&#34;
	
		alt=&#34;image.png&#34;
	
	
&gt;&lt;/p&gt;
</description>
        </item>
        
    </channel>
</rss>
